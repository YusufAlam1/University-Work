/** 
Author: Yusuf Alam 400568561
Date: February 20th
Description: The javascript section of the game that take an arrary of countries and their capital
                it asks 10 questions, keeps score, and after 10 questions the user has the option 
                to restart or go back to home
                using design and user interface principles the user receives many queues on action
                and results of their actions
*/


document.addEventListener("DOMContentLoaded", function () {
    const form = document.getElementById("welcome-form");
    const container = document.querySelector(".container");
    const helpBtn = document.getElementById("help-btn");
    const modal = document.getElementById("help-modal");
    const closeBtn = document.querySelector(".close");
    let currentQuestionIndex = 0;
    let score = 0;
    let playerName = "";
    let playerAge = "";
    let playerColor = "";
    const MAX_QUESTIONS = 10; // Changed from 1 to 10 for a better game experience

    // *** THIS IS ONLY THE 50 MOST POPULATED COUNTRIES
    // After getting comfortable with working with JSON files I will atempt to add all 197 countries
    const countryCapitalPairs = [
        { "country": "China", "capital": "Beijing" },
        { "country": "India", "capital": "New Delhi" },
        { "country": "United States", "capital": "Washington, D.C." },
        { "country": "Indonesia", "capital": "Jakarta" },
        { "country": "Pakistan", "capital": "Islamabad" },
        { "country": "Brazil", "capital": "Brasília" },
        { "country": "Nigeria", "capital": "Abuja" },
        { "country": "Bangladesh", "capital": "Dhaka" },
        { "country": "Russia", "capital": "Moscow" },
        { "country": "Mexico", "capital": "Mexico City" },
        { "country": "Japan", "capital": "Tokyo" },
        { "country": "Ethiopia", "capital": "Addis Ababa" },
        { "country": "Philippines", "capital": "Manila" },
        { "country": "Egypt", "capital": "Cairo" },
        { "country": "Vietnam", "capital": "Hanoi" },
        { "country": "DR Congo", "capital": "Kinshasa" },
        { "country": "Turkey", "capital": "Ankara" },
        { "country": "Iran", "capital": "Tehran" },
        { "country": "Germany", "capital": "Berlin" },
        { "country": "Thailand", "capital": "Bangkok" },
        { "country": "United Kingdom", "capital": "London" },
        { "country": "France", "capital": "Paris" },
        { "country": "Italy", "capital": "Rome" },
        { "country": "South Africa", "capital": "Pretoria" },
        { "country": "Tanzania", "capital": "Dodoma" },
        { "country": "Myanmar", "capital": "Naypyidaw" },
        { "country": "South Korea", "capital": "Seoul" },
        { "country": "Colombia", "capital": "Bogotá" },
        { "country": "Kenya", "capital": "Nairobi" },
        { "country": "Spain", "capital": "Madrid" },
        { "country": "Argentina", "capital": "Buenos Aires" },
        { "country": "Algeria", "capital": "Algiers" },
        { "country": "Sudan", "capital": "Khartoum" },
        { "country": "Ukraine", "capital": "Kyiv" },
        { "country": "Uganda", "capital": "Kampala" },
        { "country": "Iraq", "capital": "Baghdad" },
        { "country": "Poland", "capital": "Warsaw" },
        { "country": "Canada", "capital": "Ottawa" },
        { "country": "Morocco", "capital": "Rabat" },
        { "country": "Saudi Arabia", "capital": "Riyadh" },
        { "country": "Uzbekistan", "capital": "Tashkent" },
        { "country": "Peru", "capital": "Lima" },
        { "country": "Malaysia", "capital": "Kuala Lumpur" },
        { "country": "Angola", "capital": "Luanda" },
        { "country": "Ghana", "capital": "Accra" },
        { "country": "Mozambique", "capital": "Maputo" },
        { "country": "Yemen", "capital": "Sana'a" },
        { "country": "Nepal", "capital": "Kathmandu" },
        { "country": "Venezuela", "capital": "Caracas" },
        { "country": "Madagascar", "capital": "Antananarivo" }
    ];
    // This array was generated by AI for efficieny purposes
    // OpenAI. "JavaScript Quiz Game Code." ChatGPT, 21 Feb. 2025, chat.openai.com.


    helpBtn.addEventListener("click", function () {
        modal.style.display = "flex";
    });

    closeBtn.addEventListener("click", function () {
        modal.style.display = "none";
    });

    window.addEventListener("click", function (event) {
        if (event.target === modal) {
            modal.style.display = "none";
        }
    });

    /**
     * Using the array it chooses 10 countries to ask the capitals for
     * @returns an array of the selectedQuestions
     */
    function generateQuestions() {
        let selectedQuestions = [];
        let shuffledCountries = [...countryCapitalPairs].sort(() => Math.random() - 0.5); // Shuffle
        for (let i = 0; i < MAX_QUESTIONS; i++) {
            let entry = shuffledCountries[i];
            selectedQuestions.push({
                question: `What is the capital of ${entry.country}?`,
                choices: generateChoices(entry.capital),
                answer: entry.capital
            });
        }
        return selectedQuestions;
    }

    /**
     * Using the array it uses 4 of the capitla cities at random as choices with only one of them being correct
     * @param {*} correctAnswer 
     * @returns the city options
     */
    function generateChoices(correctAnswer) {
        let choices = [correctAnswer];
        while (choices.length < 4) {
            let randomCapital = countryCapitalPairs[Math.floor(Math.random() * countryCapitalPairs.length)].capital;
            if (!choices.includes(randomCapital)) {
                choices.push(randomCapital);
            }
        }
        return choices.sort(() => Math.random() - 0.5); // Shuffle
    }

    let questions = generateQuestions();

    form.addEventListener("submit", function (event) {
        event.preventDefault();
        playerName = document.getElementById("name").value.trim();
        playerAge = document.getElementById("age").value.trim(); // Fixed ID to match HTML
        playerColor = document.getElementById("favorite-color").value;

        if (playerName === "") return;

        container.innerHTML = `
            <h1>Welcome, ${playerName}!</h1>
            <p>I have ${MAX_QUESTIONS} questions for you...</p>
            <button id="start-quiz">Start Quiz</button>
            <p id="score">Score: 0</p>
            <p id="question"></p>
            <div id="answers"></div>
        `;
        
        // puts the selected favourite colour to use
        document.getElementById("score").style.color = playerColor;
        
        document.getElementById("start-quiz").addEventListener("click", startQuiz);
    });

    /**
     * The beginning of the quiz
     */
    function startQuiz() {
        score = 0;
        currentQuestionIndex = 0;
        questions = generateQuestions();

        const startButton = document.getElementById("start-quiz");
        if (startButton) {
            startButton.remove();
        }

        document.getElementById("score").textContent = `Score: ${score}`;
        loadQuestion();
    }

    /**
     * After question is generated it is time for the user to answer
     * 
     * @returns // This is when 10 questions have been exceeded
     */
    function loadQuestion() {
        if (currentQuestionIndex >= MAX_QUESTIONS) {
            showResults();
            return;
        }

        const questionObj = questions[currentQuestionIndex];
        document.getElementById("question").textContent = `Question ${currentQuestionIndex + 1}/${MAX_QUESTIONS}: ${questionObj.question}`;

        const answersDiv = document.getElementById("answers");
        answersDiv.innerHTML = "";

        questionObj.choices.forEach(choice => {
            const button = document.createElement("button");
            button.textContent = choice;
            button.classList.add("answer-btn");
            button.addEventListener("click", checkAnswer);
            answersDiv.appendChild(button);
        });
    }

    /**
     * Compares the chosen answer to the correct answer and resposnds accordingly
     * @param {*} event 
     */
    function checkAnswer(event) {
        const selectedAnswer = event.target.textContent;
        const correctAnswer = questions[currentQuestionIndex].answer;

        const allButtons = document.querySelectorAll(".answer-btn");
        allButtons.forEach(button => button.disabled = true);
        // Disabling buttons after answering constraining the player from doing anything wrong
        // This idea along with the 2 lines of code above were given by chatGPT
        // OpenAI. "JavaScript Quiz Game Code." ChatGPT, 22 Feb. 2025, chat.openai.com.

        if (selectedAnswer === correctAnswer) {
            event.target.style.backgroundColor = "green";
            score++;
            document.getElementById("score").textContent = `Score: ${score}`;
            // as very clearly stated in the requirements, score is a mutable variable throughout the game not using innerHTML
        } else {
            event.target.style.backgroundColor = "red";

            // If the player gets a question wrong its only fair to give the right answer for learning purposes
            // for a brief period it will highlight the correct answer green
            setTimeout(() => {
                allButtons.forEach(button => {
                    if (button.textContent === correctAnswer) {
                        button.style.backgroundColor = "green";
                    }
                });
            }, 500);
        }

        setTimeout(() => {
            currentQuestionIndex++;
            loadQuestion();
        }, 1500);
    }

    /**
     * Based on the users score by the end of the game they are told their total score
     * along with a somewhat personalized message
     * I am aware that the score percentage is redundant since it is out of 10
     * However it will come in use in the future if I were to add a chnage # of Qs feature
     */
    function showResults() {
        let feedback = "";
        let scorePercentage = (score / MAX_QUESTIONS) * 100;
        
        if (scorePercentage >= 90) {
            feedback = "Excellent! You're a geography expert!";
        } else if (scorePercentage >= 70) {
            feedback = "Great job! You know your capitals well!";
        } else if (scorePercentage >= 50) {
            feedback = "Good effort! You know quite a few capitals.";
        } else {
            feedback = "Keep learning! You'll get better with practice.";
        }
        
        container.innerHTML = `
            <h1>Quiz Completed!</h1>
            <p>Final Score: ${score}/${MAX_QUESTIONS}</p>
            <p style="color: ${playerColor};">${feedback}</p>
            <button id="restart-quiz">Play Again</button>
            <button id="return-home">Return to Home</button>
        `;

        document.getElementById("restart-quiz").addEventListener("click", restartGame);
        document.getElementById("return-home").addEventListener("click", returnToHome);
    }

    /**
     * After the game ends the user can play again
     * This function makes sure that all previous infromation like name and color were saved
     */
    function restartGame() {
        score = 0;
        currentQuestionIndex = 0;
        questions = generateQuestions(); 
    
        container.innerHTML = `
            <h1>Welcome back, ${playerName}!</h1>
            <p>Ready for another round?</p>
            <button id="start-quiz">Start Quiz</button>
            <p id="score">Score: 0</p>
            <p id="question"></p>
            <div id="answers"></div>
        `;
        
        document.getElementById("score").style.color = playerColor;
        
        document.getElementById("start-quiz").addEventListener("click", startQuiz);
    }
    
    /**
     * When the game ends the user has the option to not play again and jsut return to the home pahe
     */
    function returnToHome() {
        score = 0;
        currentQuestionIndex = 0;
        
        location.reload();
    }
});